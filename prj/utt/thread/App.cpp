#include "PrecHeader.h"
#include "App.h"
////////////////////////////////////////////////////////////////////////////////
#include <eco/thread/MessageServer.h>
#include <thread>
#include "Test.h"


ECO_NS_BEGIN(eco);
ECO_NS_BEGIN(test);
////////////////////////////////////////////////////////////////////////////////
App::App()
{}


////////////////////////////////////////////////////////////////////////////////
void App::on_init()
{
	typedef std::shared_ptr<int> IntPtr;
	eco::MessageServer<IntPtr> server;
	server.set_message_handler([](IntPtr& v) {
		ECO_INFO << eco::this_thread::id() <= *v;
	});
	server.run("", 5);

	for (auto i = 0; i < 100000; ++i)
	{
		server.post(IntPtr(new int(i+1)));
	}

	std::thread t([&]() {
		std::this_thread::sleep_for(std::chrono::milliseconds(10));
		server.close();
	});
	t.detach();
	server.join();
}


////////////////////////////////////////////////////////////////////////////////
void App::on_cmd()
{}


////////////////////////////////////////////////////////////////////////////////
void App::on_exit()
{}


////////////////////////////////////////////////////////////////////////////////
ECO_NS_END(test);
ECO_NS_END(eco);