// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Test.proto

#include "Test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace eco {
namespace proto {
class TestReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestReq>
      _instance;
} _TestReq_default_instance_;
class TestRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestRsp>
      _instance;
} _TestRsp_default_instance_;
}  // namespace proto
}  // namespace eco
namespace protobuf_Test_2eproto {
void InitDefaultsTestReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::eco::proto::_TestReq_default_instance_;
    new (ptr) ::eco::proto::TestReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eco::proto::TestReq::InitAsDefaultInstance();
}

void InitDefaultsTestReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestReqImpl);
}

void InitDefaultsTestRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Object_2eproto::InitDefaultsError();
  protobuf_Test_2eproto::InitDefaultsTestReq();
  {
    void* ptr = &::eco::proto::_TestRsp_default_instance_;
    new (ptr) ::eco::proto::TestRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eco::proto::TestRsp::InitAsDefaultInstance();
}

void InitDefaultsTestRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestRspImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::proto::TestReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::proto::TestReq, int1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::proto::TestReq, int2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::proto::TestReq, int3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::proto::TestReq, int4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::proto::TestReq, str1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::proto::TestReq, str2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::proto::TestReq, str3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::proto::TestReq, str4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::proto::TestReq, dbl1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::proto::TestReq, dbl2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::proto::TestReq, dbl3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::proto::TestReq, dbl4_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::proto::TestRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::proto::TestRsp, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::proto::TestRsp, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::eco::proto::TestReq)},
  { 17, -1, sizeof(::eco::proto::TestRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::eco::proto::_TestReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eco::proto::_TestRsp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Test.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nTest.proto\022\teco.proto\032\014Object.proto\"\261\001"
      "\n\007TestReq\022\014\n\004int1\030\n \001(\004\022\014\n\004int2\030\013 \001(\004\022\014\n"
      "\004int3\030\014 \001(\004\022\014\n\004int4\030\r \001(\004\022\014\n\004str1\030\016 \001(\t\022"
      "\014\n\004str2\030\017 \001(\t\022\014\n\004str3\030\020 \001(\t\022\014\n\004str4\030\021 \001("
      "\t\022\014\n\004dbl1\030\022 \001(\001\022\014\n\004dbl2\030\023 \001(\001\022\014\n\004dbl3\030\024 "
      "\001(\001\022\014\n\004dbl4\030\025 \001(\001\"L\n\007TestRsp\022\037\n\005error\030\001 "
      "\001(\0132\020.eco.proto.Error\022 \n\004data\030\002 \001(\0132\022.ec"
      "o.proto.TestReqb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 303);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Test.proto", &protobuf_RegisterTypes);
  ::protobuf_Object_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Test_2eproto
namespace eco {
namespace proto {

// ===================================================================

void TestReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestReq::kInt1FieldNumber;
const int TestReq::kInt2FieldNumber;
const int TestReq::kInt3FieldNumber;
const int TestReq::kInt4FieldNumber;
const int TestReq::kStr1FieldNumber;
const int TestReq::kStr2FieldNumber;
const int TestReq::kStr3FieldNumber;
const int TestReq::kStr4FieldNumber;
const int TestReq::kDbl1FieldNumber;
const int TestReq::kDbl2FieldNumber;
const int TestReq::kDbl3FieldNumber;
const int TestReq::kDbl4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestReq::TestReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Test_2eproto::InitDefaultsTestReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:eco.proto.TestReq)
}
TestReq::TestReq(const TestReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  str1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.str1().size() > 0) {
    str1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str1_);
  }
  str2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.str2().size() > 0) {
    str2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str2_);
  }
  str3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.str3().size() > 0) {
    str3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str3_);
  }
  str4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.str4().size() > 0) {
    str4_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str4_);
  }
  ::memcpy(&int1_, &from.int1_,
    static_cast<size_t>(reinterpret_cast<char*>(&dbl4_) -
    reinterpret_cast<char*>(&int1_)) + sizeof(dbl4_));
  // @@protoc_insertion_point(copy_constructor:eco.proto.TestReq)
}

void TestReq::SharedCtor() {
  str1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  str2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  str3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  str4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&int1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dbl4_) -
      reinterpret_cast<char*>(&int1_)) + sizeof(dbl4_));
  _cached_size_ = 0;
}

TestReq::~TestReq() {
  // @@protoc_insertion_point(destructor:eco.proto.TestReq)
  SharedDtor();
}

void TestReq::SharedDtor() {
  str1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  str2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  str3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  str4_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestReq::descriptor() {
  ::protobuf_Test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestReq& TestReq::default_instance() {
  ::protobuf_Test_2eproto::InitDefaultsTestReq();
  return *internal_default_instance();
}

TestReq* TestReq::New(::google::protobuf::Arena* arena) const {
  TestReq* n = new TestReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestReq::Clear() {
// @@protoc_insertion_point(message_clear_start:eco.proto.TestReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  str1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  str2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  str3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  str4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&int1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dbl4_) -
      reinterpret_cast<char*>(&int1_)) + sizeof(dbl4_));
  _internal_metadata_.Clear();
}

bool TestReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eco.proto.TestReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 int1 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &int1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 int2 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &int2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 int3 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &int3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 int4 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &int4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string str1 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str1().data(), static_cast<int>(this->str1().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eco.proto.TestReq.str1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string str2 = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str2().data(), static_cast<int>(this->str2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eco.proto.TestReq.str2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string str3 = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str3()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str3().data(), static_cast<int>(this->str3().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eco.proto.TestReq.str3"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string str4 = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str4()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str4().data(), static_cast<int>(this->str4().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eco.proto.TestReq.str4"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double dbl1 = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(145u /* 145 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbl1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double dbl2 = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(153u /* 153 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbl2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double dbl3 = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(161u /* 161 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbl3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double dbl4 = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(169u /* 169 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbl4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eco.proto.TestReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eco.proto.TestReq)
  return false;
#undef DO_
}

void TestReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eco.proto.TestReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 int1 = 10;
  if (this->int1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->int1(), output);
  }

  // uint64 int2 = 11;
  if (this->int2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->int2(), output);
  }

  // uint64 int3 = 12;
  if (this->int3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->int3(), output);
  }

  // uint64 int4 = 13;
  if (this->int4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->int4(), output);
  }

  // string str1 = 14;
  if (this->str1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str1().data(), static_cast<int>(this->str1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.proto.TestReq.str1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->str1(), output);
  }

  // string str2 = 15;
  if (this->str2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str2().data(), static_cast<int>(this->str2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.proto.TestReq.str2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->str2(), output);
  }

  // string str3 = 16;
  if (this->str3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str3().data(), static_cast<int>(this->str3().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.proto.TestReq.str3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->str3(), output);
  }

  // string str4 = 17;
  if (this->str4().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str4().data(), static_cast<int>(this->str4().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.proto.TestReq.str4");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->str4(), output);
  }

  // double dbl1 = 18;
  if (this->dbl1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->dbl1(), output);
  }

  // double dbl2 = 19;
  if (this->dbl2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->dbl2(), output);
  }

  // double dbl3 = 20;
  if (this->dbl3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->dbl3(), output);
  }

  // double dbl4 = 21;
  if (this->dbl4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->dbl4(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eco.proto.TestReq)
}

::google::protobuf::uint8* TestReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eco.proto.TestReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 int1 = 10;
  if (this->int1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->int1(), target);
  }

  // uint64 int2 = 11;
  if (this->int2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->int2(), target);
  }

  // uint64 int3 = 12;
  if (this->int3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->int3(), target);
  }

  // uint64 int4 = 13;
  if (this->int4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->int4(), target);
  }

  // string str1 = 14;
  if (this->str1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str1().data(), static_cast<int>(this->str1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.proto.TestReq.str1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->str1(), target);
  }

  // string str2 = 15;
  if (this->str2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str2().data(), static_cast<int>(this->str2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.proto.TestReq.str2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->str2(), target);
  }

  // string str3 = 16;
  if (this->str3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str3().data(), static_cast<int>(this->str3().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.proto.TestReq.str3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->str3(), target);
  }

  // string str4 = 17;
  if (this->str4().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str4().data(), static_cast<int>(this->str4().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.proto.TestReq.str4");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->str4(), target);
  }

  // double dbl1 = 18;
  if (this->dbl1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->dbl1(), target);
  }

  // double dbl2 = 19;
  if (this->dbl2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(19, this->dbl2(), target);
  }

  // double dbl3 = 20;
  if (this->dbl3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->dbl3(), target);
  }

  // double dbl4 = 21;
  if (this->dbl4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(21, this->dbl4(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eco.proto.TestReq)
  return target;
}

size_t TestReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eco.proto.TestReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string str1 = 14;
  if (this->str1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str1());
  }

  // string str2 = 15;
  if (this->str2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str2());
  }

  // string str3 = 16;
  if (this->str3().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str3());
  }

  // string str4 = 17;
  if (this->str4().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str4());
  }

  // uint64 int1 = 10;
  if (this->int1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->int1());
  }

  // uint64 int2 = 11;
  if (this->int2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->int2());
  }

  // uint64 int3 = 12;
  if (this->int3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->int3());
  }

  // uint64 int4 = 13;
  if (this->int4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->int4());
  }

  // double dbl1 = 18;
  if (this->dbl1() != 0) {
    total_size += 2 + 8;
  }

  // double dbl2 = 19;
  if (this->dbl2() != 0) {
    total_size += 2 + 8;
  }

  // double dbl3 = 20;
  if (this->dbl3() != 0) {
    total_size += 2 + 8;
  }

  // double dbl4 = 21;
  if (this->dbl4() != 0) {
    total_size += 2 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eco.proto.TestReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TestReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eco.proto.TestReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eco.proto.TestReq)
    MergeFrom(*source);
  }
}

void TestReq::MergeFrom(const TestReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eco.proto.TestReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.str1().size() > 0) {

    str1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str1_);
  }
  if (from.str2().size() > 0) {

    str2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str2_);
  }
  if (from.str3().size() > 0) {

    str3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str3_);
  }
  if (from.str4().size() > 0) {

    str4_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str4_);
  }
  if (from.int1() != 0) {
    set_int1(from.int1());
  }
  if (from.int2() != 0) {
    set_int2(from.int2());
  }
  if (from.int3() != 0) {
    set_int3(from.int3());
  }
  if (from.int4() != 0) {
    set_int4(from.int4());
  }
  if (from.dbl1() != 0) {
    set_dbl1(from.dbl1());
  }
  if (from.dbl2() != 0) {
    set_dbl2(from.dbl2());
  }
  if (from.dbl3() != 0) {
    set_dbl3(from.dbl3());
  }
  if (from.dbl4() != 0) {
    set_dbl4(from.dbl4());
  }
}

void TestReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eco.proto.TestReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestReq::CopyFrom(const TestReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eco.proto.TestReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestReq::IsInitialized() const {
  return true;
}

void TestReq::Swap(TestReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestReq::InternalSwap(TestReq* other) {
  using std::swap;
  str1_.Swap(&other->str1_);
  str2_.Swap(&other->str2_);
  str3_.Swap(&other->str3_);
  str4_.Swap(&other->str4_);
  swap(int1_, other->int1_);
  swap(int2_, other->int2_);
  swap(int3_, other->int3_);
  swap(int4_, other->int4_);
  swap(dbl1_, other->dbl1_);
  swap(dbl2_, other->dbl2_);
  swap(dbl3_, other->dbl3_);
  swap(dbl4_, other->dbl4_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestReq::GetMetadata() const {
  protobuf_Test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Test_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestRsp::InitAsDefaultInstance() {
  ::eco::proto::_TestRsp_default_instance_._instance.get_mutable()->error_ = const_cast< ::eco::proto::Error*>(
      ::eco::proto::Error::internal_default_instance());
  ::eco::proto::_TestRsp_default_instance_._instance.get_mutable()->data_ = const_cast< ::eco::proto::TestReq*>(
      ::eco::proto::TestReq::internal_default_instance());
}
void TestRsp::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestRsp::kErrorFieldNumber;
const int TestRsp::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestRsp::TestRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Test_2eproto::InitDefaultsTestRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:eco.proto.TestRsp)
}
TestRsp::TestRsp(const TestRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::eco::proto::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  if (from.has_data()) {
    data_ = new ::eco::proto::TestReq(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:eco.proto.TestRsp)
}

void TestRsp::SharedCtor() {
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&error_)) + sizeof(data_));
  _cached_size_ = 0;
}

TestRsp::~TestRsp() {
  // @@protoc_insertion_point(destructor:eco.proto.TestRsp)
  SharedDtor();
}

void TestRsp::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
  if (this != internal_default_instance()) delete data_;
}

void TestRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestRsp::descriptor() {
  ::protobuf_Test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestRsp& TestRsp::default_instance() {
  ::protobuf_Test_2eproto::InitDefaultsTestRsp();
  return *internal_default_instance();
}

TestRsp* TestRsp::New(::google::protobuf::Arena* arena) const {
  TestRsp* n = new TestRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:eco.proto.TestRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool TestRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eco.proto.TestRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .eco.proto.Error error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eco.proto.TestReq data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eco.proto.TestRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eco.proto.TestRsp)
  return false;
#undef DO_
}

void TestRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eco.proto.TestRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eco.proto.Error error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->error_, output);
  }

  // .eco.proto.TestReq data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eco.proto.TestRsp)
}

::google::protobuf::uint8* TestRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eco.proto.TestRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eco.proto.Error error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->error_, deterministic, target);
  }

  // .eco.proto.TestReq data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eco.proto.TestRsp)
  return target;
}

size_t TestRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eco.proto.TestRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .eco.proto.Error error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->error_);
  }

  // .eco.proto.TestReq data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eco.proto.TestRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const TestRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eco.proto.TestRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eco.proto.TestRsp)
    MergeFrom(*source);
  }
}

void TestRsp::MergeFrom(const TestRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eco.proto.TestRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    mutable_error()->::eco::proto::Error::MergeFrom(from.error());
  }
  if (from.has_data()) {
    mutable_data()->::eco::proto::TestReq::MergeFrom(from.data());
  }
}

void TestRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eco.proto.TestRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestRsp::CopyFrom(const TestRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eco.proto.TestRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestRsp::IsInitialized() const {
  return true;
}

void TestRsp::Swap(TestRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestRsp::InternalSwap(TestRsp* other) {
  using std::swap;
  swap(error_, other->error_);
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestRsp::GetMetadata() const {
  protobuf_Test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Test_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace eco

// @@protoc_insertion_point(global_scope)
